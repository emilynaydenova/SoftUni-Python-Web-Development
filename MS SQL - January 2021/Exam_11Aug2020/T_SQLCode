/*Database Fundamentals MSSQL – Bakery
Your friend is opening his “bio” bakery. 
Since he is a lucky one to have you as a friend/programmer you decide
to take part of his new journey – selling healthy food to people. 
Based on his requirements you should create the initial database frame.
Then you have to do some data manipulations.
Finally, you have to do some work on the programmability part. */


CREATE DATABASE Bakery
GO
USE Bakery
GO


CREATE TABLE Countries
(
Id int PRIMARY KEY IDENTITY,
[Name] nvarchar(50) UNIQUE
)

CREATE TABLE Customers
(
Id int PRIMARY KEY IDENTITY,
FirstName nvarchar(25),
LastName nvarchar(25),
Gender char(1) CHECK(Gender IN ('M','F')),
Age int,
PhoneNumber char(10) CHECK(len(PhoneNumber) = 10),
CountryId int REFERENCES Countries(Id)
)

CREATE TABLE Products
(
Id int PRIMARY KEY IDENTITY,
[Name] nvarchar(25) UNIQUE,
[Description] nvarchar(250),
Recipe nvarchar(MAX),
Price money CHECK(Price >=0)
)

CREATE TABLE Feedbacks
(
Id int PRIMARY KEY IDENTITY,
[Description] nvarchar(255),
[Rate] DEC (18,2) CHECK(Rate BETWEEN 0.0 AND 10.0),
ProductId int REFERENCES Products(Id),
CustomerId int REFERENCES Customers(Id),
)

CREATE TABLE  Distributors
(
Id int PRIMARY KEY IDENTITY,
[Name] nvarchar(25) UNIQUE,
AddressText nvarchar(30),
Summary nvarchar(200),
CountryId int REFERENCES Countries(Id)
)

CREATE TABLE Ingredients
(
Id int PRIMARY KEY IDENTITY,
[Name] nvarchar(30),
[Description] nvarchar(200),
OriginCountryId int REFERENCES Countries(Id),
DistributorId int REFERENCES Distributors(Id)
) 

CREATE TABLE  ProductsIngredients
(
ProductId int FOREIGN KEY REFERENCES Products(Id) NOT NULL,      -----!!!!! FOREIGN KEY !!!! full 
IngredientId int FOREIGN KEY REFERENCES Ingredients(Id) NOT NULL,
CONSTRAINT PK_ProductID_IngredientId PRIMARY KEY (ProductId,IngredientId)
)

------ 2------------
INSERT INTO Distributors ([Name],CountryId,AddressText,Summary)
VALUES
('Deloitte & Touche',2,'6 Arch St #9757','Customizable neutral traveling'),
('Congress Title',13,'58 Hancock St','Customer loyalty'),
('Kitchen People',1,'3 E 31st St #77','Triple-buffered stable delivery'),
('General Color Co Inc',21,'6185 Bohn St #72','Focus group'),
('Beck Corporation',23,'21 E 64th Ave','Quality-focused 4th generation hardware')

INSERT INTO Customers (FirstName,LastName,Age,Gender,PhoneNumber,CountryId)
VALUES
('Francoise','Rautenstrauch',15,'M','0195698399',5),
('Kendra','Loud',22,'F','0063631526',11),
('Lourdes','Bauswell',50,'M','0139037043',8),
('Hannah','Edmison',18,'F','0043343686',1),
('Tom','Loeza',31,'M','0144876096',23),
('Queenie','Kramarczyk',30,'F','0064215793',29),
('Hiu','Portaro',25,'M','0068277755',16),
('Josefa','Opitz',43,'F','0197887645',17)


------- 3 ----------------
UPDATE Ingredients
   SET DistributorId = 35
WHERE [Name] IN ('Bay Leaf', 'Paprika','Poppy')

UPDATE Ingredients
  SET OriginCountryID = 14
WHERE OriginCountryId = 8

------ 4 --------------
DELETE FROM Feedbacks
      WHERE CustomerId = 14

DELETE FROM Feedbacks
      WHERE ProductId = 5

------------5 -------------------
  SELECT [Name],
          Price,
		  [Description] 
    FROM Products
ORDER BY Price DESC, [Name] 

------- 6 --------------

  SELECT f.ProductId,f.Rate,f.[Description],f.CustomerId,c.Age,c.Gender 
    FROM Feedbacks f
    JOIN Customers c ON c.Id = f.CustomerId
   WHERE f.Rate < 5.0
ORDER BY f.ProductId DESC, Rate

--------- 7 -------------
   SELECT CONCAT(FirstName,' ',LastName) AS  CustomerName,
          c.PhoneNumber,
		  c.Gender
     FROM Customers c
LEFT JOIN Feedbacks f on f.CustomerId = c.Id
    WHERE f.Id IS NULL


---------- 8 --------------------
  SELECT FirstName, Age, PhoneNumber
    FROM Customers cu
    JOIN Countries c ON c.Id = cu.CountryId
   WHERE (Age >= 21 AND FirstName LIKE '%an%') 
      OR (PhoneNumber LIKE '%38' AND c.Name <>'Greece')
ORDER BY FirstName, Age DESC

----------- 9 ----------------

  SELECT d.[Name] AS DistributorName,
         i.[Name] AS IngredientName,
         p.[Name] AS ProductName, 
		 AVG(f.Rate) AS AverageRate
    FROM Distributors d
    JOIN Ingredients i ON i.DistributorId = d.Id
    JOIN ProductsIngredients ping ON ping.IngredientId = i.Id
    JOIN Products p ON p.Id = ping.ProductId
    JOIN Feedbacks f ON f.ProductId = p.Id
GROUP BY p.[Name],i.[Name],d.[Name]
  HAVING AVG(f.Rate) BETWEEN 5.0 AND 8.0
ORDER BY d.[Name],i.[Name],p.[Name]

GO
----------- 10. ---------------

SELECT CountryName, DistributorName
FROM
(
	SELECT c.[Name] AS CountryName,
	       d.[Name] AS  DistributorName,
		   COUNT(i.id) AS IngredientsCount,
	       DENSE_RANK() OVER (PARTITION BY c.[Name] ORDER BY COUNT(i.id) DESC) AS [Rank]
	  FROM Countries c
	  JOIN Distributors d ON d.CountryId = c.Id
 LEFT JOIN Ingredients i ON i.DistributorId = d.Id
  GROUP BY c.[Name], d.[Name]
	) ss
   WHERE [Rank] = 1
ORDER BY CountryName

 
 ------------- 11. ------------------
 CREATE VIEW v_UserWithCountries 
 AS
   SELECT 'CustomerName'= CONCAT(c.FirstName,' ',c.LastName),
		   c.Age,
		   c.Gender,
		   co.[Name] AS CountryName
	  FROM Customers c
 LEFT JOIN Countries co ON c.CountryId = co.Id

 SELECT TOP 5 *
  FROM v_UserWithCountries
 ORDER BY Age

GO
 --------------12.-----------------
 CREATE TRIGGER tr_DeleteProductsRelations ON Products INSTEAD OF DELETE
 AS
 DECLARE @Id int = (SELECT id FROM deleted)

 DELETE 
  FROM Feedbacks 
 WHERE ProductId = @Id

 DELETE FROM ProductsIngredients
 WHERE ProductId = @Id
 

DELETE FROM PRODUCTS
 WHERE id = @Id
