CREATE DATABASE Airport
GO
USE Airport
GO

------------- 1 -----------------
CREATE TABLE Planes
(
Id int PRIMARY KEY IDENTITY,
[Name] varchar(30) NOT NULL,
Seats int NOT NULL,
[Range] int NOT NULL
)

CREATE TABLE Flights
(
Id int PRIMARY KEY IDENTITY,
DepartureTime datetime,
ArrivalTime datetime,
Origin varchar(50) NOT NULL,
Destination varchar(50) NOT NULL,
PlaneId int NOT NULL FOREIGN KEY REFERENCES Planes(Id)
)

CREATE TABLE Passengers
(
Id int PRIMARY KEY IDENTITY,
FirstName varchar(30) NOT NULL,
LastName varchar(30) NOT NULL,
Age int NOT NULL,
[Address] varchar(30) NOT NULL, 
PassportId char(11) NOT NULL
)

CREATE TABLE LuggageTypes
(
Id int PRIMARY KEY IDENTITY,
[Type] varchar(30) NOT NULL
)

CREATE TABLE Luggages
(
Id int PRIMARY KEY IDENTITY,
LuggageTypeId int NOT NULL REFERENCES LuggageTypes(Id),
PassengerId int NOT NULL REFERENCES Passengers(Id)
)

CREATE TABLE Tickets
(
Id int PRIMARY KEY IDENTITY,
PassengerId int NOT NULL REFERENCES Passengers(Id),
FlightId int NOT NULL REFERENCES Flights(Id),
LuggageId int NOT NULL REFERENCES Luggages(Id),
Price DEC(18,2) NOT NULL
)


------- 3 --------------

UPDATE Tickets 
   SET Price *=1.13 
 WHERE FlightId IN (SELECT Id FROM Flights WHERE Destination = 'Carlsbad')

------- 4 ------------

DELETE FROM Luggages
WHERE Id IN (SELECT LuggageID FROM Tickets
			WHERE FlightId =
			(SELECT Id FROM Flights WHERE Destination = 'Ayn Halagim'))

DELETE FROM Tickets
WHERE FlightId = (SELECT Id FROM Flights WHERE Destination = 'Ayn Halagim')


DELETE FROM Flights 
WHERE Destination = 'Ayn Halagim'


--------5 -----------------------
SELECT * FROM Planes
   WHERE [Name] LIKE '%tr%'
ORDER BY Id,
         [Name],
         Seats,
         [Range]

--------- 6 ------------
   SELECT FlightId,
          SUM(Price) AS Price 
     FROM Tickets
 GROUP BY FlightId
 ORDER BY Price DESC, FlightId

 ------------ 7 ------------
 SELECT  CONCAT(FirstName,' ',LastName) AS [Full Name],
         f.Origin,
         f.Destination 
    FROM Passengers p
  	JOIN Tickets t ON t.PassengerId = p.Id
	  JOIN Flights f ON f.Id = t.FlightId
ORDER BY [Full Name], 
         f.Origin,
         f.Destination

------------- 8 --------------
   SELECT FirstName AS [First Name],
          LastName AS [Last Name],
          Age 
     FROM Passengers p
LEFT JOIN Tickets t ON t.PassengerId = p.Id
    WHERE t.PassengerId IS NULL
 ORDER BY Age DESC,
          FirstName,
          LastName

------------ 9 ---------------

  SELECT CONCAT(FirstName,' ',LastName) AS [Full Name],
         pn.[Name] AS [Plane Name],
         CONCAT(f.Origin,' - ',f.Destination) AS Trip,
         lt.[Type] AS [Luggage Type]
    FROM Passengers p
    JOIN Tickets t ON p.Id = t.PassengerId
    JOIN Flights f ON f.Id = t.FlightId
    JOIN Planes pn ON pn.Id = f.PlaneId
    JOIN Luggages l ON l.Id = t.LuggageId
    JOIN LuggageTypes lt ON lt.Id = l.LuggageTypeId
ORDER BY [Full Name],
         [Plane Name],
         Origin,
         Destination,
         [Luggage Type]

----------- 10 -----------------
   SELECT pn.Name,
          pn.Seats,
          COUNT(t.PassengerId) AS [Passengers Count]
     FROM Planes pn
LEFT JOIN Flights f ON f.PlaneId = pn.Id
LEFT JOIN Tickets t ON t.FlightId = f.Id
 GROUP BY pn.[Name],pn.Seats
 ORDER BY [Passengers Count] DESC,
          pn.Name,
          pn.Seats

------------- 11 ------------------
CREATE OR ALTER FUNCTION udf_CalculateTickets(@origin VARCHAR(50),@destination VARCHAR(50), @peopleCount INT)
RETURNS VARCHAR(50)
AS
BEGIN
	IF (@peopleCount <= 0)
		RETURN ('Invalid people count!');
		
	DECLARE @FlightID int = (SELECT TOP(1) Id 
		FROM Flights WHERE Origin = @origin AND Destination = @destination)

	IF (@flightId IS NULL)
    RETURN ('Invalid flight!');
 	 
	DECLARE @peoplePrice DECIMAL(18,2) = 
	(SELECT TOP(1) Price  FROM Tickets                                     
	                  WHERE FlightId=@flightId)

    DECLARE @TotalPrice DECIMAL(24,2) = @peoplePrice * @peopleCount;

	RETURN CONCAT('Total price ',@TotalPrice)
 
END


SELECT dbo.udf_CalculateTickets('Kolyshley','Rancabolang', 33)
SELECT dbo.udf_CalculateTickets('Kolyshley','Rancabolang', -1)
SELECT dbo.udf_CalculateTickets('Invalid','Rancabolang', 33)


------------- 12 -------------------------
GO
CREATE PROC usp_CancelFlights 
AS
 
UPDATE Flights
   SET DepartureTime = NULL ,ArrivalTime = NULL
 WHERE DATEDIFF(second,ArrivalTime, DepartureTime)<0

GO
EXEC usp_CancelFlights
