CREATE DATABASE ColonialJourney
GO
USE ColonialJourney
GO
------ 01 ----------------
CREATE TABLE Planets
(
Id int PRIMARY KEY IDENTITY,
[Name] varchar(30) NOT NULL
)

CREATE TABLE Spaceports
(
Id int PRIMARY KEY IDENTITY,
[Name] varchar(50) NOT NULL,
PlanetId int REFERENCES Planets(Id)
)

CREATE TABLE Spaceships
(
 Id int PRIMARY KEY IDENTITY,
[Name] varchar(50) NOT NULL,
Manufacturer varchar(30) NOT NULL,
LightSpeedRate int DEFAULT 0
)
CREATE TABLE Colonists
(
Id int PRIMARY KEY IDENTITY,
FirstName varchar(20) NOT NULL,
LastName varchar(20) NOT NULL,
Ucn varchar(10) NOT NULL UNIQUE,
BirthDate date NOT NULL
)
CREATE TABLE Journeys
(
Id int PRIMARY KEY IDENTITY,
JourneyStart datetime2 NOT NULL,
JourneyEnd datetime2 NOT NULL,
Purpose varchar(11) NOT NULL 
    CHECK(Purpose IN ('Medical', 'Technical', 'Educational', 'Military')),
DestinationSpaceportId int NOT NULL REFERENCES Spaceports(Id),
SpaceshipId int NOT NULL REFERENCES Spaceships(Id)
)
CREATE TABLE TravelCards
(
Id int PRIMARY KEY IDENTITY,
CardNumber char(10) NOT NULL UNIQUE,
JobDuringJourney varchar(8) 
    CHECK(JobDuringJourney IN ('Pilot', 'Engineer', 'Trooper', 'Cleaner', 'Cook')),
ColonistId int NOT NULL REFERENCES Colonists(Id),
JourneyId int NOT NULL REFERENCES Journeys(Id)
);

-------------02---------------
INSERT INTO Planets ([Name])
VALUES
('Mars'),
('Earth'),
('Jupiter'),
('Saturn')

INSERT INTO Spaceships([Name],Manufacturer,LightSpeedRate)
VALUES
('Golf','VW',3),
('WakaWaka','Wakanda',4),
('Falcon9','SpaceX',1),
('Bed','Vidolov',6)


---------03 --------------
UPDATE Spaceships
   SET LightSpeedRate += 1
 WHERE Id BETWEEN 8 AND 12;

------- 04 -----------
DELETE FROM TravelCards
      WHERE JourneyId BETWEEN 1 AND 3

DELETE FROM Journeys
      WHERE Id BETWEEN 1 AND 3;
 
 ------ 05 ------------
   SELECT Id,
         FORMAT(JourneyStart,'dd/MM/yyyy') AS JourneyStart,
         FORMAT(JourneyEnd,'dd/MM/yyyy') AS JourneyEnd
    FROM Journeys
   WHERE Purpose = 'Military'
ORDER BY JourneyStart;

 ----- 6----------------
    SELECT c.Id, CONCAT(c.FirstName,' ',c.LastName) AS full_name  
     FROM Colonists c
     JOIN TravelCards t ON t.ColonistId = c.Id
    WHERE t.JobDuringJourney = 'Pilot'
 ORDER BY Id
 
 ------- 7 ----------------
 SELECT COUNT(j.Purpose) AS [count]
   FROM Colonists c
   JOIN TravelCards t ON t.ColonistId = c.Id
   JOIN Journeys j ON j.Id = t.JourneyId
  WHERE j.Purpose = 'Technical';
 

 ------ 8 ----------------------
   SELECT s.[Name],
          s.Manufacturer 
     FROM Spaceships s
     JOIN Journeys j ON j.SpaceshipId = s.Id
     JOIN TravelCards tc  ON tc.JourneyId = j.Id
     JOIN Colonists c ON c.Id = tc.ColonistId
    WHERE DATEDIFF(year,c.BirthDate, j.JourneyStart) < 30 
      AND tc.JobDuringJourney = 'Pilot'
 ORDER BY s.Name
    
 ---- 9. ----------------------
  SELECT p.[Name] AS PlanetName,
         COUNT(j.Id) AS JourneyCount
    FROM Planets p 
    JOIN SpacePorts sp ON p.Id = sp.PlanetId 
    JOIN Journeys j ON j.DestinationSpaceportId = sp.Id
GROUP BY p.[Name]
ORDER BY JourneyCount DESC,
         p.[Name];

----- 10. -------------------
SELECT * FROM
    (
	SELECT tc.JobDuringJourney ,
	       CONCAT(c.FirstName,' ',c.LastName) AS FullName,
           DENSE_RANK() OVER 
		       (PARTITION BY tc.JobDuringJourney ORDER BY c.BirthDate ASC) AS JobRank
           FROM Colonists c
	  JOIN TravelCards tc ON tc.ColonistId = c.Id
	  ) ranked
     WHERE JobRank = 2

------- 11. -------------------------
CREATE FUNCTION dbo.udf_GetColonistsCount(@PlanetName VARCHAR (30))
 RETURNS INT
AS
BEGIN
	DECLARE @Counter INT = 0

	SET @Counter = 
	   (
	  SELECT COUNT(t.ColonistId)  
		FROM Planets p 
		JOIN SpacePorts sp ON p.Id = sp.PlanetId 
		JOIN Journeys j ON j.DestinationSpaceportId = sp.Id
		JOIN TravelCards t ON t.JourneyId = j.Id
		WHERE p.[Name] = @PlanetName
		 )
  RETURN @Counter
 END;


------- 12. --------------------
CREATE PROC usp_ChangeJourneyPurpose(@JourneyId int, @NewPurpose varchar(11))
AS
IF NOT EXISTS(SELECT * FROM Journeys j WHERE j.Id = @JourneyId) 
	THROW 50001, 'The journey does not exist!', 1

IF (SELECT Purpose FROM Journeys j WHERE j.Id = @JourneyId) = @NewPurpose
	THROW 50001, 'You cannot change the purpose!', 1

UPDATE Journeys  
   SET Purpose = @NewPurpose
 WHERE id = @JourneyId;
