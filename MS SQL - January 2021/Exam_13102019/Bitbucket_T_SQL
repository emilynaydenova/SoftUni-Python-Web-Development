CREATE DATABASE Bitbucket
GO
USE Bitbucket
GO

-------------------------
CREATE TABLE Users
(
Id INT PRIMARY KEY IDENTITY,
Username   VARCHAR(30) NOT NULL,
[Password] VARCHAR(30) NOT NULL,
Email      VARCHAR(50) NOT NULL
)

CREATE TABLE Repositories
(
Id INT PRIMARY KEY IDENTITY(1,1),
[Name] VARCHAR(50) NOT NULL
)

CREATE TABLE RepositoriesContributors
(
RepositoryId INT FOREIGN KEY REFERENCES Repositories(Id) NOT NULL,
ContributorId INT FOREIGN KEY REFERENCES Users(Id) NOT NULL,
CONSTRAINT PK_RepositoriesContributors PRIMARY KEY (RepositoryId,ContributorId)
)

CREATE TABLE Issues
(
Id INT PRIMARY KEY IDENTITY,
Title VARCHAR(255) NOT NULL,
IssueStatus CHAR(6) NOT NULL,
RepositoryId INT REFERENCES Repositories(Id) NOT NULL,
AssigneeId INT REFERENCES Users(Id) NOT NULL
)

CREATE TABLE Commits
(
Id INT PRIMARY KEY IDENTITY,
[Message] VARCHAR(255) NOT NULL,
IssueId INT REFERENCES Issues(Id),
RepositoryId INT REFERENCES Repositories(Id) NOT NULL,
ContributorId INT REFERENCES Users(Id) NOT NULL
)

CREATE TABLE Files
(
Id  INT PRIMARY KEY IDENTITY,
[Name] VARCHAR(100) NOT NULL,
Size DEC(18,2) NOT NULL,
ParentId INT REFERENCES Files(Id),   --- self-refernce
CommitId INT REFERENCES Commits(Id) NOT NULL
)

-------- 2. ---------------
INSERT INTO Files ([Name],Size,ParentId,CommitId)
VALUES
	('Trade.idk',2598.0,1,1),
	('menu.net',9238.31,2,2),
	('Administrate.soshy',1246.93,3,3),
	('Controller.php',7353.15,4,4),
	('Find.java',9957.86,5,5),
	('Controller.json',14034.87,3,6),
	('Operate.xix',	7662.92,7,7)

INSERT INTO Issues (Title,IssueStatus,RepositoryId,AssigneeId)
VALUES
	('Critical Problem with HomeController.cs file','open',1,4),
	('Typo fix in Judge.html','open',4,3),
	('Implement documentation for UsersService.cs','closed',8,2),
	('Unreachable code in Index.cs','open',9,8)

-------- 3. ---------------
UPDATE Issues
   SET IssueStatus = 'closed'
 WHERE AssigneeId = 6

 --------- 4. --------------
 DELETE FROM RepositoriesContributors  
       WHERE RepositoryId = 
	   (SELECT id 
	      FROM Repositories 
	     WHERE [Name] = 'Softuni-Teamwork')
 
 DELETE FROM Issues
       WHERE RepositoryId = 
	   (SELECT id 
	      FROM Repositories 
	     WHERE [Name] = 'Softuni-Teamwork')

DELETE FROM Files 
      WHERE CommitID = 
     (SELECT id 
	    FROM Commits
       WHERE RepositoryID =
       (SELECT id 
	      FROM Repositories
		 WHERE [Name]='Softuni-Teamwork')
	   )

DELETE FROM Commits  
       WHERE RepositoryId = 
	   (SELECT id 
	      FROM Repositories 
	     WHERE [Name] = 'Softuni-Teamwork')

 DELETE FROM Repositories
       WHERE [Name] = 'Softuni-Teamwork'

-------- 5. ----------------
  SELECT Id,
         [Message],
		 RepositoryId,
		 ContributorId
   FROM Commits
ORDER BY Id,
         [Message],
		 RepositoryId,
		 ContributorId

--------- 6. ----------------
  SELECT Id,
         [Name],
		 Size
	FROM Files
   WHERE Size > 1000.0 
     AND [Name] LIKE '%html%'
ORDER BY Size DESC,Id,[Name]

--------- 7. -----------------

  SELECT i.Id,
         CONCAT(u.Username,' : ',i.Title) AS IssueAssignee
    FROM Issues i
    JOIN Users u ON u.Id = i.AssigneeId
ORDER BY i.Id DESC,
         IssueAssignee


---------- 8. ------------------
  SELECT Id,
         [Name],
		 CONCAT(Size,'KB') AS [Size] 
    FROM Files f
   WHERE id NOT IN (SELECT ParentId FROM Files WHERE id = f.id)
ORDER BY id,
         [Name],
		 [Size] DESC
-- or
    SELECT f1.Id,
	       f1.[Name],
		   CONCAT(f1.Size,'KB') As Size
	  FROM Files f1
 LEFT JOIN Files f2 ON f1.id=f2.Parentid
     WHERE f2.id IS NULL
  ORDER BY id,
          [Name],
		  Size DESC

----------- 9. ---------------
SELECT TOP(5) r.Id,
              r.[Name],
			  COUNT(rs.ContributorId) AS Contributors
         FROM RepositoriesContributors AS rs
         JOIN Repositories AS r ON r.id=rs.RepositoryId
         JOIN Commits AS c ON c.RepositoryId = r.Id
  GROUP BY r.Id,r.[Name]
  ORDER BY [Contributors] DESC,r.Id,r.[Name]
 
--------- 10. -----------------

  SELECT u.Username,
         AVG(f.Size) AS [Size] 
	FROM Users u
    JOIN Commits c ON c.ContributorId = u.Id
    JOIN Files f ON f.CommitId = c.Id
GROUP BY u.Username
ORDER BY [Size] DESC,u.Username


----------- 11. ---------------
CREATE FUNCTION udf_UserTotalCommits(@username varchar(30)) 
RETURNS int
AS
BEGIN
DECLARE @Result int =
	( SELECT COUNT(c.Id) FROM Commits c
    	JOIN Users u ON u.Id = c.ContributorId
	   WHERE u.Username = @username
	 )

RETURN @Result
END


---------- 12. ----------------
CREATE PROC usp_FindByExtension @extension varchar(30)
AS
	SELECT Id,
	       [Name],
		   CONCAT(Size,'KB') AS [Size]
	  FROM FILES
	 WHERE RIGHT([Name],LEN(@extension)+1) = '.' + @extension 

GO
